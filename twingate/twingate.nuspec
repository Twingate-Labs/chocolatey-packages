<?xml version="1.0" encoding="utf-8"?>
<!-- Read this before creating packages: https://docs.chocolatey.org/en-us/create/create-packages -->
<!-- It is especially important to read the above link to understand additional requirements when publishing packages to the community feed aka dot org (https://community.chocolatey.org/packages). -->

<!-- Test your packages in a test environment: https://github.com/chocolatey/chocolatey-test-environment -->

<!--
This is a nuspec. It mostly adheres to https://docs.nuget.org/create/Nuspec-Reference. Chocolatey uses a special version of NuGet.Core that allows us to do more than was initially possible. As such there are certain things to be aware of:

* the package xmlns schema url may cause issues with nuget.exe
* Any of the following elements can ONLY be used by choco tools - projectSourceUrl, docsUrl, mailingListUrl, bugTrackerUrl, packageSourceUrl, provides, conflicts, replaces
* nuget.exe can still install packages with those elements but they are ignored. Any authoring tools or commands will error on those elements
-->

<!-- You can embed software files directly into packages, as long as you are not bound by distribution rights. -->
<!-- * If you are an organization making private packages, you probably have no issues here -->
<!-- * If you are releasing to the community feed, you need to consider distribution rights. -->
<!-- Do not remove this test for UTF-8: if “Ω” doesn’t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <id>twingate</id>
    <version>2024.99.6390</version>
    <packageSourceUrl>https://github.com/Twingate-Labs/chocolatey-packages</packageSourceUrl>
    <owners>Twingate Labs</owners>
    <title>Twingate (Client)</title>
    <authors>Twingate Inc.</authors>
    <projectUrl>https://www.twingate.com</projectUrl>
    <!-- There are a number of CDN Services that can be used for hosting the Icon for a package. More information can be found here: https://docs.chocolatey.org/en-us/create/create-packages#package-icon-guidelines -->
    <!-- Here is an example using Githack -->
    <iconUrl>https://www.twingate.com/favicon-32x32.png?q=chocolatey</iconUrl>
    <copyright>2022 Twingate</copyright>
    <!-- If there is a license Url available, it is required for the community feed -->
    <licenseUrl>https://www.twingate.com/terms/user/</licenseUrl>
    <requireLicenseAcceptance>true</requireLicenseAcceptance>
    <!--<projectSourceUrl>Software Source Location - is the software FOSS somewhere? Link to it with this</projectSourceUrl>-->
    <docsUrl>https://docs.twingate.com</docsUrl>
    <!--<mailingListUrl></mailingListUrl>-->
    <!--<bugTrackerUrl></bugTrackerUrl>-->
    <tags>twingate zerotrust security vpn remoteaccess</tags>
    <summary>Replace corporate VPNs with a more secure, usable and performant zero trust access solution</summary>
    <description><![CDATA[Delivered as a cloud-based service, Twingate empowers IT teams to easily configure a software defined perimeter without changing infrastructure, and centrally manage user access to internal apps, whether they are on-prem or in the cloud.
]]></description>
    <releaseNotes><![CDATA[
Please see https://www.twingate.com/changelog/clients/
]]></releaseNotes>
  <dependencies>
    <dependency id="chocolatey-os-dependency.extension" version="0.0.1" />
    <dependency id="dotnet-6.0-desktopruntime" version="6.0.22" />
  </dependencies>
  </metadata>
  <files>
    <!-- this section controls what actually gets packaged into the Chocolatey package -->
    <file src="tools\**" target="tools" />
  </files>
</package>
